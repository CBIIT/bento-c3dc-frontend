type GroupCount {
    group: String
    subjects: Int
}

type FileOverview {
    file_name: String
    file_type: String
    file_description: String
    file_format: String
    file_size: Int
    md5sum: String
    file_status: String
    uuid: String
    file_location: String
    subject_id: String
    study_id: String
    program_id: String
}

type StudyInfo {
    study_id: String
    study_description: String
    associated_subject_count: Int
}

type ProgramInfo {
    program_id: String
    cancer: String
    program_headquarters: String
    program_consortium: String
    consortium_manager: String
    associated_sub_count: Int
    associated_study_count: Int
}

type ProgramDetail {
    program_id: String
    cancer: String
    program_consortium: String
    program_consortium_manager: String
    program_headquarters: String
    num_files: Int
    num_studies: Int
    studies: [StudySubjectCount]
}

type StudyDetail {
    study_id: String
    study_description: String
    num_cases: Int
    num_files: Int
    subjects: [SubjectDetail]
}

type SubjectId {
    pcdc_subject_id: String
}

type SubjectDetail {
    pcdc_subject_id: String
    honest_broker_subject_id: String
    data_contributor_id: String
    age_at_enrollment: Float
    treatment_arm: String
    enrolled_status: String
    year_at_enrollment: Float
    adverse_events: [Adverse_Events_Table]
    radiation_therapy: [Radiation_Therapy_Table]
    medical_history: [Medical_History_Table]
    course_timing: [Course_Timing_Table]
    files: [File]
}

type StudySubjectCount {
    study_id: String
    study_description: String
    subjectCount: Int
}

type SubjectOverview {
    pcdc_subject_id: String
    race: String
    sex: String
    disease_phase: String
    treatment_arm: String
    disease_site: String
    data_contributor_id: String
    ae_grade: String
    ae_outcome: String
    study_id: String
    program_id: String
    cancer: String
    files: [FileId]
}

type FileId {
    file_id: String
}

type SearchResult {
    numOfPrograms: Int
    numberOfSubjects: Int
    num_of_studies: Int
    numberOfFiles: Int
    fileIds: [String],
    subjectIds: [String]
}

schema {
    query: QueryType
}

type QueryType {
    
    # Schema metadata
    schemaVersion: String @cypher(statement: "RETURN '0.2.6'")

    # Node count queries
    numOfPrograms: Int @cypher(statement: "MATCH (x:Program) RETURN COUNT(x)")
    num_of_studies: Int @cypher(statement: "MATCH (x:Study) RETURN COUNT(x)")
    numberOfSubjects: Int @cypher(statement: "MATCH (x:Subject_Characteristics_Table) RETURN COUNT(x)")
    numberOfFiles: Int @cypher(statement: "MATCH (x:File) RETURN COUNT(x)")
    
    # Queries to list nodes
    listOfPrograms: [ProgramInfo] @cypher(statement: """
        MATCH (p: Program)
        OPTIONAL MATCH (p)<-[*]-(sc: Subject_Characteristics_Table)
        OPTIONAL MATCH (p)<--(s:Study)
        RETURN {
            program_id: p.PROGRAM_ID,
            cancer: p.Cancer,
            program_headquarters: p.Headquarters,
            program_consortium: p.Consortium,
            consortium_manager: p.Consortium_Manager,
            associated_sub_count: COUNT(DISTINCT sc.PCDC_SUBJECT_ID),
            associated_study_count: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    list_of_studies: [StudyInfo] @cypher(statement: """
        MATCH (s:Study)
        OPTIONAL MATCH (s)<--(sc: Subject_Characteristics_Table)
        RETURN {
            study_id: s.STUDY_ID,
            study_description: s.STUDY_Description,
            associated_subject_count: COUNT(DISTINCT sc)
        }
    """, passThrough: true)

    list_of_studies_by_program(program_id: String): [StudyInfo] @cypher(statement: """
        MATCH (p: Program {PROGRAM_ID: $program_id})<--(s: Study)
        OPTIONAL MATCH (s)<--(sc: Subject_Characteristics_Table)
        RETURN {
            study_id: s.STUDY_ID,
            study_description: s.STUDY_Description,
            associated_subject_count: COUNT(DISTINCT sc)
        }
    """, passThrough: true)

    # Node detail queries
    programDetails(program_id: String): ProgramDetail @cypher(statement: """
        MATCH (p: Program {PROGRAM_ID: $program_id})
        OPTIONAL MATCH (p)<--(s: Study)<--(sc: Subject_Characteristics_Table)
        WITH
            s, COUNT(DISTINCT sc) AS num_study_subjects
        WITH
            COLLECT(DISTINCT s{
                study_id: s.STUDY_ID,
                study_description: s.STUDY_Description,
                subjectCount: num_study_subjects
            }) AS studies
        MATCH (p: Program {PROGRAM_ID: $program_id})
        OPTIONAL MATCH (p)<--(s: Study)
        OPTIONAL MATCH (s)<--(sc: Subject_Characteristics_Table)
        OPTIONAL MATCH (sc)<--(f: File)
        WITH
            p, studies, 
            COUNT(DISTINCT f) AS num_files,
            COUNT(DISTINCT s) AS num_studies
        RETURN {
            program_id: p.PROGRAM_ID,
            cancer: p.Cancer,
            program_consortium: p.Consortium,
            program_consortium_manager: p.Consortium_Manager,
            program_headquarters: p.Headquarters,
            num_files: num_files,
            num_studies: num_studies,
            studies: studies
        }
    """, passThrough: true)

    studyDetails(study_id: String): StudyDetail @cypher(statement: """
        MATCH (s: Study {STUDY_ID: $study_id})
        OPTIONAL MATCH (s)<--(sc: Subject_Characteristics_Table)
        WITH
            COLLECT(DISTINCT sc{
                pcdc_subject_id: sc.PCDC_SUBJECT_ID,
                honest_broker_subject_id: sc.HONEST_BROKER_SUBJECT_ID,
                data_contributor_id: sc.DATA_CONTRIBUTOR_ID,
                age_at_enrollment: sc.AGE_AT_ENROLLMENT,
                treatment_arm: sc.TREATMENT_ARM,
                enrolled_status: sc.ENROLLED_STATUS,
                year_at_enrollment: sc.YEAR_AT_ENROLLMENT
            }) AS subjects
        MATCH (s: Study {STUDY_ID: $study_id})
        OPTIONAL MATCH (s)<--(sc: Subject_Characteristics_Table)
        OPTIONAL MATCH (sc)<--(f: File)
        WITH
            s, subjects,
            COUNT(DISTINCT sc) AS num_cases,
            COUNT(DISTINCT f) AS num_files
        RETURN{
            study_id: s.STUDY_ID,
            study_description: s.STUDY_Description,
            num_cases: num_cases,
            num_files: num_files,
            subjects: subjects
        }
    """, passThrough: true)

    subjectDetails(subject_id: String): SubjectDetail @cypher(statement: """
        OPTIONAL MATCH (sc: Subject_Characteristics_Table {PCDC_SUBJECT_ID: $subject_id})<--(ae: Adverse_Events_Table)
        WITH
            COLLECT (DISTINCT ae{
                AGE_AT_AE: ae.AGE_AT_AE,
                DISEASE_PHASE:  ae.DISEASE_PHASE,
                DISEASE_PHASE_NUMBER:  ae.DISEASE_PHASE_NUMBER,
                COURSE:  ae.COURSE,
                COURSE_NUMBER:  ae.COURSE_NUMBER,
                ADVERSE_EVENT:  ae.ADVERSE_EVENT,
                AE_CODE:  ae.AE_CODE,
                AE_SYSTEM:  ae.AE_SYSTEM,
                AE_SYSTEM_VERSION:  ae.AE_SYSTEM_VERSION,
                AE_GRADE:  ae.AE_GRADE,
                AE_ATTRIBUTION:  ae.AE_ATTRIBUTION,
                AE_OUTCOME:  ae.AE_OUTCOME,
                AE_ICU:  ae.AE_ICU,
                AE_MEDICATION:  ae.AE_MEDICATION,
                AE_INTERVENTION:  ae.AE_INTERVENTION,
                AE_MED_INTERVENTION_DETAIL:  ae.AE_MED_INTERVENTION_DETAIL,
                AE_PATHOGEN:  ae.AE_PATHOGEN,
                AE_PATHOGEN_CONFIRMATION:  ae.AE_PATHOGEN_CONFIRMATION,
                GVHD_ACUITY:  ae.GVHD_ACUITY,
                GVHD_ORGAN:  ae.GVHD_ORGAN,
                AGE_AT_AE_RESOLVED:  ae.AGE_AT_AE_RESOLVED,
                AVN_JOINT:  ae.AVN_JOINT,
                AVN_JOINT_LATERALITY:  ae.AVN_JOINT_LATERALITY,
                AVN_METHOD:  ae.AVN_METHOD,
                ORTHOPEDIC_PROCEDURE:  ae.ORTHOPEDIC_PROCEDURE,
                INFECTION_CLASSIFICATION:  ae.INFECTION_CLASSIFICATION
            }) as adverse_events
        OPTIONAL MATCH (sc: Subject_Characteristics_Table {PCDC_SUBJECT_ID: $subject_id})<--(rt: Radiation_Therapy_Table)
        WITH
            COLLECT (DISTINCT rt{
                AGE_AT_RT_START: rt.AGE_AT_RT_START,
                AGE_AT_RT_END: rt.AGE_AT_RT_END,
                DISEASE_PHASE: rt.DISEASE_PHASE,
                DISEASE_PHASE_NUMBER: rt.DISEASE_PHASE_NUMBER,
                COURSE: rt.COURSE,
                COURSE_NUMBER: rt.COURSE_NUMBER,
                RT_SITE: rt.RT_SITE,
                RT_DOSE: rt.RT_DOSE,
                RT_UNIT: rt.RT_UNIT,
                TUMOR_CLASSIFICATION: rt.TUMOR_CLASSIFICATION,
                TUMOR_TISSUE_TYPE: rt.TUMOR_TISSUE_TYPE,
                RT_LATERALITY: rt.RT_LATERALITY,
                ENERGY_TYPE: rt.ENERGY_TYPE,
                NUM_FRACTION: rt.NUM_FRACTION,
                TRANSPOSITION_ORGAN: rt.TRANSPOSITION_ORGAN,
                BOOST: rt.BOOST
            }) AS radiation_therapy,
            adverse_events
        OPTIONAL MATCH (sc: Subject_Characteristics_Table {PCDC_SUBJECT_ID: $subject_id})<--(mh: Medical_History_Table)
        WITH
            COLLECT (DISTINCT mh{
                MEDICAL_HISTORY: mh.MEDICAL_HISTORY,
                DYSGENETIC_GONAD: mh.DYSGENETIC_GONAD
            }) AS medical_history,
            adverse_events,
            radiation_therapy
        OPTIONAL MATCH (sc: Subject_Characteristics_Table {PCDC_SUBJECT_ID: $subject_id})<--(ct: Course_Timing_Table)
        WITH
            COLLECT (DISTINCT ct{
                COURSE: ct.COURSE,
                COURSE_NUMBER: ct.COURSE_NUMBER,
                AGE_AT_COURSE_START: ct.AGE_AT_COURSE_START,
                AGE_AT_COURSE_END: ct.AGE_AT_COURSE_END,
                AGE_AT_COURSE_ANC_500: ct.AGE_AT_COURSE_ANC_500,
                AGE_AT_TXASSIGN: ct.AGE_AT_TXASSIGN
            }) AS course_timing,
            adverse_events,
            radiation_therapy,
            medical_history
        OPTIONAL MATCH (sc: Subject_Characteristics_Table {PCDC_SUBJECT_ID: $subject_id})<--(f: File)
        WITH
            COLLECT (DISTINCT f{
                FILE_NAME: f.FILE_NAME,
                FILE_TYPE: f.FILE_TYPE,
                FILE_DESCRIPTION: f.FILE_DESCRIPTION,
                FILE_FORMAT: f.FILE_FORMAT,
                FILE_SIZE: f.FILE_SIZE,
                MD5SUM: f.MD5SUM,
                FILE_STATUS: f.FILE_STATUS,
                UUID: f.UUID,
                FILE_LOCATION: f.FILE_LOCATION
            }) as files,
            adverse_events,
            radiation_therapy,
            medical_history,
            course_timing
        MATCH (sc: Subject_Characteristics_Table {PCDC_SUBJECT_ID: $subject_id})
        RETURN {
            pcdc_subject_id: sc.PCDC_SUBJECT_ID,
            honest_broker_subject_id: sc.HONEST_BROKER_SUBJECT_ID,
            data_contributor_id: sc.DATA_CONTRIBUTOR_ID,
            age_at_enrollment: sc.AGE_AT_ENROLLMENT,
            treatment_arm: sc.TREATMENT_ARM,
            enrolled_status: sc.ENROLLED_STATUS,
            year_at_enrollment: sc.YEAR_AT_ENROLLMENT,
            adverse_events: adverse_events,
            radiation_therapy: radiation_therapy,
            medical_history: medical_history,
            course_timing: course_timing,
            files: files
        }
    """, passThrough: true)

    subjectCourseTiming(subject_id: String): [Course_Timing_Table] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table {PCDC_SUBJECT_ID: $subject_id})<--(ct: Course_Timing_Table)
        RETURN {
            COURSE: ct.COURSE,
            COURSE_NUMBER: ct.COURSE_NUMBER,
            AGE_AT_COURSE_START: ct.AGE_AT_COURSE_START,
            AGE_AT_COURSE_END: ct.AGE_AT_COURSE_END,
            AGE_AT_COURSE_ANC_500: ct.AGE_AT_COURSE_ANC_500,
            AGE_AT_TXASSIGN: ct.AGE_AT_TXASSIGN
        }
    """, passThrough: true)

    fileOverview(file_ids: [String] = [], order_by: String = ""): [FileOverview] @cypher(statement: """
        MATCH (f:File)
            WHERE (size($file_ids) = 0 OR $file_ids IS NULL OR f.UUID IN $file_ids)
        OPTIONAL MATCH (f)-->(sc:Subject_Characteristics_Table)-->(s:Study)-->(p:Program)
        RETURN {
          file_name: f.FILE_NAME,
          file_type: f.FILE_TYPE,
          file_description: f.FILE_DESCRIPTION,
          file_format: f.FILE_FORMAT,
          file_size: f.FILE_SIZE,
          md5sum: f.MD5SUM,
          file_status: f.FILE_STATUS,
          uuid: f.UUID,
          file_location: f.FILE_LOCATION,
          subject_id: sc.PCDC_SUBJECT_ID,
          study_id: s.STUDY_ID,
          program_id: p.PROGRAM_ID,
          cancer: p.Cancer
        }
        ORDER BY CASE $order_by
            WHEN "file_name" THEN f.FILE_NAME
            WHEN "file_type" THEN f.FILE_TYPE
            WHEN "file_description" THEN f.FILE_DESCRIPTION
            WHEN "file_format" THEN f.FILE_FORMAT
            WHEN "file_size" THEN f.FILE_SIZE
            WHEN "md5sum" THEN f.MD5SUM
            WHEN "file_status" THEN f.FILE_STATUS
            WHEN "uuid" THEN f.UUID
            WHEN "file_location" THEN f.FILE_LOCATION
            WHEN "subject_id" THEN sc.PCDC_SUBJECT_ID
            WHEN "study_id" THEN s.STUDY_ID
            WHEN "program_id" THEN p.PROGRAM_ID
            WHEN "cancer" THEN p.Cancer
        ELSE f.FILE_NAME END
    """, passThrough: true)

    fileOverviewDesc(file_ids: [String] = [], order_by: String = ""): [FileOverview] @cypher(statement: """
        MATCH (f:File)
            WHERE (size($file_ids) = 0 OR $file_ids IS NULL OR f.UUID IN $file_ids)
        OPTIONAL MATCH (f)-->(sc:Subject_Characteristics_Table)-->(s:Study)-->(p:Program)
        RETURN {
          file_name: f.FILE_NAME,
          file_type: f.FILE_TYPE,
          file_description: f.FILE_DESCRIPTION,
          file_format: f.FILE_FORMAT,
          file_size: f.FILE_SIZE,
          md5sum: f.MD5SUM,
          file_status: f.FILE_STATUS,
          uuid: f.UUID,
          file_location: f.FILE_LOCATION,
          subject_id: sc.PCDC_SUBJECT_ID,
          study_id: s.STUDY_ID,
          program_id: p.PROGRAM_ID,
          cancer: p.Cancer
        }
        ORDER BY CASE $order_by
            WHEN "file_name" THEN f.FILE_NAME
            WHEN "file_type" THEN f.FILE_TYPE
            WHEN "file_description" THEN f.FILE_DESCRIPTION
            WHEN "file_format" THEN f.FILE_FORMAT
            WHEN "file_size" THEN f.FILE_SIZE
            WHEN "md5sum" THEN f.MD5SUM
            WHEN "file_status" THEN f.FILE_STATUS
            WHEN "uuid" THEN f.UUID
            WHEN "file_location" THEN f.FILE_LOCATION
            WHEN "subject_id" THEN sc.PCDC_SUBJECT_ID
            WHEN "study_id" THEN s.STUDY_ID
            WHEN "program_id" THEN p.PROGRAM_ID
            WHEN "cancer" THEN p.Cancer
        ELSE f.FILE_NAME END DESC
    """, passThrough: true)

    subjectOverviewPaged(subject_ids: [String] = [], order_by: String = ""): [SubjectOverview] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)
            WHERE (size($subject_ids) = 0 OR $subject_ids IS NULL OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc)
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc)
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc)
        OPTIONAL MATCH (dc: Disease_Characteristics_Table)-->(sc)
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc)
        OPTIONAL MATCH (f: File)-->(sc)
        WITH 
            sc.PCDC_SUBJECT_ID AS pcdc_subject_id,
            demo.RACE AS race,
            demo.SEX AS sex,
            dpt.DISEASE_PHASE AS disease_phase,
            sc.TREATMENT_ARM AS treatment_arm,
            dc.DISEASE_SITE AS disease_site,
            sc.DATA_CONTRIBUTOR_ID AS data_contributor_id,
            ae.AE_GRADE AS ae_grade,
            ae.AE_OUTCOME AS ae_outcome,
            s.STUDY_ID AS study_id,
            p.PROGRAM_ID as program_id,
            p.Cancer as cancer,
            COLLECT(DISTINCT f {
                file_id: f.UUID
            }) AS files
        RETURN {
            pcdc_subject_id: pcdc_subject_id,
            race: race,
            sex: sex,
            disease_phase: disease_phase,
            treatment_arm: treatment_arm,
            disease_site: disease_site,
            data_contributor_id: data_contributor_id,
            ae_grade: ae_grade,
            ae_outcome: ae_outcome,
            study_id: study_id,
            program_id: program_id,
            cancer: cancer,
            files: files
        }
        ORDER BY CASE $order_by
            WHEN "pcdc_subject_id" THEN pcdc_subject_id
            WHEN "race" THEN race
            WHEN "sex" THEN sex
            WHEN "disease_phase" THEN disease_phase
            WHEN "treatment_arm" THEN treatment_arm
            WHEN "disease_site" THEN disease_site
            WHEN "data_contributor_id" THEN data_contributor_id
            WHEN "ae_grade" THEN ae_grade
            WHEN "ae_outcome" THEN ae_outcome
            WHEN "study_id" THEN study_id
            WHEN "program_id" THEN program_id
            WHEN "cancer" THEN cancer
            WHEN "files" THEN files
        ELSE pcdc_subject_id END
    """, passThrough: true)

    subjectOverviewPagedDesc(subject_ids: [String] = [], order_by: String = ""): [SubjectOverview] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)
            WHERE (size($subject_ids) = 0 OR $subject_ids IS NULL OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc)
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc)
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc)
        OPTIONAL MATCH (dc: Disease_Characteristics_Table)-->(sc)
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc)
        OPTIONAL MATCH (f: File)-->(sc)
        WITH 
            sc.PCDC_SUBJECT_ID AS pcdc_subject_id,
            demo.RACE AS race,
            demo.SEX AS sex,
            dpt.DISEASE_PHASE AS disease_phase,
            sc.TREATMENT_ARM AS treatment_arm,
            dc.DISEASE_SITE AS disease_site,
            sc.DATA_CONTRIBUTOR_ID AS data_contributor_id,
            ae.AE_GRADE AS ae_grade,
            ae.AE_OUTCOME AS ae_outcome,
            s.STUDY_ID AS study_id,
            p.PROGRAM_ID as program_id,
            p.Cancer as cancer,
            COLLECT(DISTINCT f {
                file_id: f.UUID
            }) AS files
        RETURN {
            pcdc_subject_id: pcdc_subject_id,
            race: race,
            sex: sex,
            disease_phase: disease_phase,
            treatment_arm: treatment_arm,
            disease_site: disease_site,
            data_contributor_id: data_contributor_id,
            ae_grade: ae_grade,
            ae_outcome: ae_outcome,
            study_id: study_id,
            program_id: program_id,
            cancer: cancer,
            files: files
        }
        ORDER BY CASE $order_by
            WHEN "pcdc_subject_id" THEN pcdc_subject_id
            WHEN "race" THEN race
            WHEN "sex" THEN sex
            WHEN "disease_phase" THEN disease_phase
            WHEN "treatment_arm" THEN treatment_arm
            WHEN "disease_site" THEN disease_site
            WHEN "data_contributor_id" THEN data_contributor_id
            WHEN "ae_grade" THEN ae_grade
            WHEN "ae_outcome" THEN ae_outcome
            WHEN "study_id" THEN study_id
            WHEN "program_id" THEN program_id
            WHEN "cancer" THEN cancer
            WHEN "files" THEN files
        ELSE pcdc_subject_id END DESC
    """, passThrough: true)

    studySubjectCountByDiseasePhase(study_id: String): [GroupCount] @cypher(statement: """
        MATCH (s: Study {STUDY_ID: $study_id})<--(sc: Subject_Characteristics_Table)<--(dc: Disease_Characteristics_Table)
        RETURN {
          group: dc.DISEASE_PHASE,
          subjects: count(DISTINCT(sc))
        }  
    """, passThrough: true) 

    subjectIdsOfStudy(study_id: String): [SubjectId] @cypher(statement: """
        MATCH (s: Study)<--(sc: Subject_Characteristics_Table)
            WHERE s.STUDY_ID = $study_id
        RETURN {
            pcdc_subject_id: sc.PCDC_SUBJECT_ID
        }
    """, passThrough: true)

    subjectIdsOfProgram(program_id: String): [SubjectId] @cypher(statement: """
        MATCH (p: Program)<-[*]-(sc: Subject_Characteristics_Table)
            WHERE p.PROGRAM_ID = $program_id
        RETURN {
            pcdc_subject_id: sc.PCDC_SUBJECT_ID
        }
    """, passThrough: true)

    programSubjectCountByTreatmentArm(program_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (p: Program)<-[*]-(sc: Subject_Characteristics_Table)
          WHERE (size($program_ids) = 0 OR p.PROGRAM_ID IN $program_ids)
        RETURN {
          group: sc.TREATMENT_ARM,
          subjects: count(DISTINCT(sc))
        }
    """, passThrough: true)

    subjectCountByTreatmentArm(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (p: Program)<-[*]-(sc: Subject_Characteristics_Table)
          WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: sc.TREATMENT_ARM,
          subjects: count(DISTINCT(sc))
        }
    """, passThrough: true)

    subjectCountByProgram(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)-[*]->(p: Program)
          WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: p.PROGRAM_ID,
          subjects: count(DISTINCT(sc))
        }
    """, passThrough: true)

    subjectCountByStudy(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)-->(s: Study)
            WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: s.STUDY_ID,
          subjects: count(DISTINCT(sc))
        }
    """, passThrough: true)

    subjectCountByDataContributorId(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)
            WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: sc.DATA_CONTRIBUTOR_ID,
          subjects: count(DISTINCT(sc))
        }
    """, passThrough: true)

    subjectCountByDiseasePhase(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)<--(dc: Disease_Characteristics_Table)
            WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: dc.DISEASE_PHASE,
          subjects: count(DISTINCT(sc))
        }  
    """, passThrough: true) 

    subjectCountBySex(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)<--(demo: Demographics_Table)
            WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: demo.SEX,
          subjects: count(DISTINCT(sc))
        }  
    """, passThrough: true) 

    subjectCountByRace(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)<--(demo: Demographics_Table)
            WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: demo.RACE,
          subjects: count(DISTINCT(sc))
        }
    """, passThrough: true) 

    subjectCountByCourse(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)<--(ct: Course_Timing_Table)
            WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: ct.COURSE,
          subjects: count(DISTINCT(sc))
        }
    """, passThrough: true)  

    subjectCountByDiseaseSite(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)<--(dc: Disease_Characteristics_Table)
            WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: dc.DISEASE_SITE,
          subjects: count(DISTINCT(sc))
        }
    """, passThrough: true)  

    subjectCountByAEGrade(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)<--(ae: Adverse_Events_Table)
            WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: ae.AE_GRADE,
          subjects: count(DISTINCT(sc))
        }
    """, passThrough: true) 

    subjectCountByAEOutcome(subject_ids: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sc: Subject_Characteristics_Table)<--(ae: Adverse_Events_Table)
            WHERE (size($subject_ids) = 0 OR sc.PCDC_SUBJECT_ID IN $subject_ids)
        RETURN {
          group: ae.AE_OUTCOME,
          subjects: count(DISTINCT(sc))
        }
    """, passThrough: true) 

    filterSubjectCountByProgram(
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (p: Program)
        WITH ids, p, COLLECT(DISTINCT p.PROGRAM_ID) AS groups
        OPTIONAL MATCH (p)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH 
            p.PROGRAM_ID AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    filterSubjectCountByDataContributor (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (sc:Subject_Characteristics_Table)
        WITH ids, sc, COLLECT(DISTINCT sc.DATA_CONTRIBUTOR_ID) AS groups
        MATCH (sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH sc.DATA_CONTRIBUTOR_ID AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    filterSubjectCountByStudy (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (s:Study)
        WITH ids, s, COLLECT(DISTINCT s.STUDY_ID) AS groups
        OPTIONAL MATCH (s)<--(sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH s.STUDY_ID AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }   
    """, passThrough: true)

    filterSubjectCountByTreatmentArm (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (sc:Subject_Characteristics_Table)
        WITH ids, sc, COLLECT(DISTINCT sc.TREATMENT_ARM) AS groups
        MATCH (sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH sc.TREATMENT_ARM AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    filterSubjectCountByRace (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (demo:Demographics_Table)
        WITH ids, demo, COLLECT(DISTINCT demo.RACE) AS groups
        OPTIONAL MATCH (demo)-->(sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH demo.RACE AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    filterSubjectCountBySex (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (demo:Demographics_Table)
        WITH ids, demo, COLLECT(DISTINCT demo.SEX) AS groups
        OPTIONAL MATCH (demo)-->(sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH demo.SEX AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    filterSubjectCountByDiseasePhase (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (dpt: Disease_Phase_Timing_Table)
        WITH ids, dpt, COLLECT(DISTINCT dpt.DISEASE_PHASE) AS groups
        OPTIONAL MATCH (dpt)-->(sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH dpt.DISEASE_PHASE AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    filterSubjectCountByAEOutcome (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (ae:Adverse_Events_Table)
        WITH ids, ae, COLLECT(DISTINCT ae.AE_OUTCOME) AS groups
        OPTIONAL MATCH (ae)-->(sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH ae.AE_OUTCOME AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    filterSubjectCountByAEGrade (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (ae:Adverse_Events_Table)
        WITH ids, ae, COLLECT(DISTINCT ae.AE_GRADE) AS groups
        OPTIONAL MATCH (ae)-->(sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH ae.AE_GRADE AS count_group,
             count(DISTINCT sc) AS count,
             groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    filterSubjectCountByDiseaseSite (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (dct: Disease_Characteristics_Table)
        WITH ids, dct, COLLECT(DISTINCT dct.DISEASE_SITE) AS groups
        OPTIONAL MATCH (dct)-->(sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH dct.DISEASE_SITE AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    filterSubjectCountByFileType (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (f:File)
        WITH ids, f, COLLECT(DISTINCT f.FILE_TYPE) AS groups
        OPTIONAL MATCH (f)-->(sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH f.FILE_TYPE AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    filterSubjectCountByCancer (
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (p:Program)
        WITH ids, p, COLLECT(DISTINCT p.Cancer) AS groups
        OPTIONAL MATCH (p)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        WITH p.Cancer AS count_group,
            count(DISTINCT sc) AS count,
            groups
        UNWIND groups AS group
        RETURN {
            group: group,
            subjects: SUM(CASE count_group WHEN group THEN count ELSE 0 END)
        }
    """, passThrough: true)

    searchSubjects(
        pcdc_subject_id: [String] = [],
        program_id: [String] = [],
        data_contributor_id: [String] = [],
        study_id: [String] = [],
        treatment_arm: [String] = [],
        race: [String] = [],
        sex: [String] = [],
        disease_phase: [String] = [],
        ae_outcome: [String] = [],
        ae_grade: [String] = [],
        disease_site: [String] = [],
        fileType: [String] = [],
        cancer: [String] = []
    ): SearchResult @cypher(statement: """
        MATCH (sc:Subject_Characteristics_Table)
            WHERE
                (size($pcdc_subject_id) = 0 OR $pcdc_subject_id IS NULL OR sc.PCDC_SUBJECT_ID IN $pcdc_subject_id) AND
                (size($data_contributor_id) = 0 OR $data_contributor_id IS NULL OR sc.DATA_CONTRIBUTOR_ID IN $data_contributor_id) AND
                (size($treatment_arm) = 0 OR $treatment_arm IS NULL OR sc.TREATMENT_ARM IN $treatment_arm)
        WITH COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.PROGRAM_ID IN $program_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($program_id) = 0 OR $program_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                p.Cancer IN $cancer AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($cancer) = 0 OR $cancer IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (p: Program)<--(s: Study)<--(sc:Subject_Characteristics_Table)
            WHERE
                s.STUDY_ID IN $study_id AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($study_id) = 0 OR $study_id IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.RACE IN $race AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($race) = 0 OR $race IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (demo: Demographics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                demo.SEX IN $sex AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($sex) = 0 OR $sex IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dpt: Disease_Phase_Timing_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dpt.DISEASE_PHASE IN $disease_phase AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_phase) = 0 OR $disease_phase IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_OUTCOME IN $ae_outcome AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_outcome) = 0 OR $ae_outcome IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (ae: Adverse_Events_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                ae.AE_GRADE IN $ae_grade AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($ae_grade) = 0 OR $ae_grade IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (dct: Disease_Characteristics_Table)-->(sc:Subject_Characteristics_Table)
            WHERE
                dct.DISEASE_SITE IN $disease_site AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($disease_site) = 0 OR $disease_site IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        OPTIONAL MATCH (f: File)-->(sc:Subject_Characteristics_Table)
            WHERE
                f.FILE_TYPE IN $fileType AND
                sc.PCDC_SUBJECT_ID IN ids
        WITH CASE WHEN (size($fileType) = 0 OR $fileType IS NULL) THEN ids ELSE COLLECT(DISTINCT sc.PCDC_SUBJECT_ID) END AS ids
        MATCH (sc:Subject_Characteristics_Table)
            WHERE sc.PCDC_SUBJECT_ID IN ids
        OPTIONAL MATCH (sc)-->(s:Study)-->(p:Program)
        OPTIONAL MATCH (f:File)-->(sc)
        WITH sc, s, p, f, ids
        RETURN{
            numOfPrograms: COUNT(DISTINCT p),
            numberOfSubjects: COUNT(DISTINCT sc),
            num_of_studies: COUNT(DISTINCT s),
            numberOfFiles: COUNT(DISTINCT f),
            fileIds: COLLECT(DISTINCT f.UUID),
            subjectIds: COLLECT(DISTINCT sc.PCDC_SUBJECT_ID)
        }
    """, passThrough: true)
}