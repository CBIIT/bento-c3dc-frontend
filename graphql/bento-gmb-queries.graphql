type GroupCount {
    group: String
    subjects: Int
}

type FileUUID {
    uuid: String
}

type SubjectOverview {
    subject_id: String
    race: String
    diseaseTerm: String
    registeringInstitution: String
    patientSubgroup: String
    stageAtEntry: String
    causeOfDeath: String
    sitesOfDiseaseAtAutopsy: String
    sourceOfTheLabData: String
    labTest: String
    systemOrganClass: String
    serious: String
    outcome: String
    pathogenicity: String
    germlinePathogenicity: String
    files: [FileUUID]
}

type FileOverview {
    uuid: String
    file_name: String
    file_description: String
    file_format: String
    file_size: String
    trial_id: String
    trial_short_name: String
    arm: String
    subject_id: String
}

type SearchResult {
    numberOfTrials: Int
    numberOfSubjects: Int
    numberOfFiles: Int
    fileIds: [String]
    subject_id: [String]
}

schema {
    query: QueryType
}

type QueryType {
    schemaVersion: String @cypher(statement: "RETURN 'Demo Schema 0.1.2'")

    numberOfTrials: Int @cypher(statement: "MATCH (ct:CLINICAL_TRIAL) RETURN COUNT(ct)")
    numberOfSubjects: Int @cypher(statement: "MATCH (s:SUBJECT) RETURN COUNT(s)")
    numberOfFiles: Int @cypher(statement: "MATCH (f:FILE) RETURN COUNT(f)")

    subjectCountByRace(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: s.PT_RACE_CD_1,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountByDiseaseTerm(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: s.DZ_DX_NM,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountByRegisteringInstitution(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: s.REG_INST_ID_CD,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountByPatientSubgroup(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: s.PT_SUBGRP_ASSIGN_TP,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountByDiseaseStageAtEntry(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (e:ENROLLMENT)
        OPTIONAL MATCH (e)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: e.DISEAS_STG,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountByCauseOfDeath(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (srv:SURVIVAL)
        OPTIONAL MATCH (srv)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: srv.DEATH_CAUS_CD,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountBySitesOfDiseaseAtAutopsy(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (srv:SURVIVAL)
        OPTIONAL MATCH (srv)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: srv.ATPSY_DZ_SITE_NM,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountBySourceOfTheLabData(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (l:LABORATORY)
        OPTIONAL MATCH (l)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: l.LAB_DATA_SRCE_NM,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountByLabTest(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (l:LABORATORY)
        OPTIONAL MATCH (l)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: l.LAB_TEST_NM,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountBySystemOrganClass(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (ae:ADVERSE_EVENTS)
        OPTIONAL MATCH (ae)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: ae.MEDDRA_SOC_TRM_NM,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountBySerious(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (ae:ADVERSE_EVENTS)
        OPTIONAL MATCH (ae)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: ae.SAE_RSN,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountByOutcome(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (ae:ADVERSE_EVENTS)
        OPTIONAL MATCH (ae)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: ae.AE_OUTCOME,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountBySomaticPathogenicity(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (sv:SOMATIC_VARIANT)
        OPTIONAL MATCH (sv)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: sv.SOMATIC_VAR_PTHGNC_CAT,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountByFileType(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (f:FILE)
        OPTIONAL MATCH (f)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: f.FILE_TYPE,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectCountByGermlinePathogenicity(subject_id: [String] = []): [GroupCount] @cypher(statement: """
        MATCH (gv:GERMLINE_VARIANT)
        OPTIONAL MATCH (gv)-->(s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        RETURN {
            group: gv.GRMLN_VAR_PTHGNC_CAT,
            subjects: COUNT(s)
        }
    """, passThrough: true)

    subjectOverViewPaged(subject_ids: [String] = [], order_by: String = ""): [SubjectOverview] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($subject_ids) = 0 OR s.PT_ID IN $subject_ids)
        OPTIONAL MATCH (e:ENROLLMENT)-->(s) 
        OPTIONAL MATCH (srv:SURVIVAL)-->(s)
        OPTIONAL MATCH (l:LABORATORY)-->(s)
        OPTIONAL MATCH (ae:ADVERSE_EVENTS)-->(s)
        OPTIONAL MATCH (sv:SOMATIC_VARIANT)-->(s)
        OPTIONAL MATCH (gv:GERMLINE_VARIANT)-->(s)
        OPTIONAL MATCH (f:FILE)-->(s)
        WITH COLLECT(DISTINCT f {uuid: f.UUID}) as files,
            s,e,srv,l,ae,sv,gv
        RETURN {
            subject_id: s.PT_ID,
            race: s.PT_RACE_CD_1,
            diseaseTerm: s.DZ_DX_NM,
            registeringInstitution: s.REG_INST_ID_CD,
            patientSubgroup: s.PT_SUBGRP_ASSIGN_TP,
            stageAtEntry: e.DISEAS_STG,
            causeOfDeath: srv.DEATH_CAUS_CD,
            sitesOfDiseaseAtAutopsy: srv.ATPSY_DZ_SITE_NM,
            sourceOfTheLabData: l.LAB_DATA_SRCE_NM,
            labTest: l.LAB_TEST_NM,
            systemOrganClass: ae.MEDDRA_SOC_TRM_NM,
            serious: ae.SAE_RSN,
            outcome: ae.AE_OUTCOME,
            pathogenicity: sv.SOMATIC_VAR_PTHGNC_CAT,
            germlinePathogenicity: gv.GRMLN_VAR_PTHGNC_CAT,
            files: files
        }
        ORDER BY CASE $order_by
            WHEN 'subject_id' THEN s.PT_ID
            WHEN 'race' THEN s.PT_RACE_CD_1
            WHEN 'diseaseTerm' THEN s.DZ_DX_NM
            WHEN 'registeringInstitution' THEN s.REG_INST_ID_CD
            WHEN 'patientSubgroup' THEN s.PT_SUBGRP_ASSIGN_TP
            WHEN 'stageAtEntry' THEN e.DISEAS_STG
            WHEN 'causeOfDeath' THEN srv.DEATH_CAUS_CD
            WHEN 'sitesOfDiseaseAtAutopsy' THEN srv.ATPSY_DZ_SITE_NM
            WHEN 'sourceOfTheLabData' THEN l.LAB_DATA_SRCE_NM
            WHEN 'labTest' THEN l.LAB_TEST_NM
            WHEN 'systemOrganClass' THEN ae.MEDDRA_SOC_TRM_NM
            WHEN 'serious' THEN ae.SAE_RSN
            WHEN 'outcome' THEN ae.AE_OUTCOME
            WHEN 'pathogenicity' THEN sv.SOMATIC_VAR_PTHGNC_CAT
            WHEN 'germlinePathogenicity' THEN gv.GRMLN_VAR_PTHGNC_CAT
        ELSE s.PT_ID END
    """, passThrough: true)

    subjectOverViewPagedDesc(subject_id: [String] = [], order_by: String = ""): [SubjectOverview] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($subject_id) = 0 OR s.PT_ID IN $subject_id)
        OPTIONAL MATCH (e:ENROLLMENT)-->(s) 
        OPTIONAL MATCH (srv:SURVIVAL)-->(s)
        OPTIONAL MATCH (l:LABORATORY)-->(s)
        OPTIONAL MATCH (ae:ADVERSE_EVENTS)-->(s)
        OPTIONAL MATCH (sv:SOMATIC_VARIANT)-->(s)
        OPTIONAL MATCH (gv:GERMLINE_VARIANT)-->(s)
        OPTIONAL MATCH (f:FILE)-->(s)
        WITH COLLECT(DISTINCT f {uuid: f.UUID}) as files,
            s,e,srv,l,ae,sv,gv
        RETURN {
            subject_id: s.PT_ID,
            race: s.PT_RACE_CD_1,
            diseaseTerm: s.DZ_DX_NM,
            registeringInstitution: s.REG_INST_ID_CD,
            patientSubgroup: s.PT_SUBGRP_ASSIGN_TP,
            stageAtEntry: e.DISEAS_STG,
            causeOfDeath: srv.DEATH_CAUS_CD,
            sitesOfDiseaseAtAutopsy: srv.ATPSY_DZ_SITE_NM,
            sourceOfTheLabData: l.LAB_DATA_SRCE_NM,
            labTest: l.LAB_TEST_NM,
            systemOrganClass: ae.MEDDRA_SOC_TRM_NM,
            serious: ae.SAE_RSN,
            outcome: ae.AE_OUTCOME,
            pathogenicity: sv.SOMATIC_VAR_PTHGNC_CAT,
            germlinePathogenicity: gv.GRMLN_VAR_PTHGNC_CAT,
            files: files
        }
        ORDER BY CASE $order_by
            WHEN 'subject_id' THEN s.PT_ID
            WHEN 'race' THEN s.PT_RACE_CD_1
            WHEN 'diseaseTerm' THEN s.DZ_DX_NM
            WHEN 'registeringInstitution' THEN s.REG_INST_ID_CD
            WHEN 'patientSubgroup' THEN s.PT_SUBGRP_ASSIGN_TP
            WHEN 'stageAtEntry' THEN e.DISEAS_STG
            WHEN 'causeOfDeath' THEN srv.DEATH_CAUS_CD
            WHEN 'sitesOfDiseaseAtAutopsy' THEN srv.ATPSY_DZ_SITE_NM
            WHEN 'sourceOfTheLabData' THEN l.LAB_DATA_SRCE_NM
            WHEN 'labTest' THEN l.LAB_TEST_NM
            WHEN 'systemOrganClass' THEN ae.MEDDRA_SOC_TRM_NM
            WHEN 'serious' THEN ae.SAE_RSN
            WHEN 'outcome' THEN ae.AE_OUTCOME
            WHEN 'pathogenicity' THEN sv.SOMATIC_VAR_PTHGNC_CAT
            WHEN 'germlinePathogenicity' THEN gv.GRMLN_VAR_PTHGNC_CAT
        ELSE s.PT_ID END DESC
    """, passThrough: true)

    searchSubjects(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): SearchResult @cypher(statement: """ 
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            numberOfTrials: COUNT(DISTINCT ct),
            numberOfSubjects: COUNT(DISTINCT s),
            numberOfFiles: COUNT(DISTINCT f),
            fileIds: COLLECT(DISTINCT f.UUID),
            subject_id: COLLECT(DISTINCT s.PT_ID)
        }
    """, passThrough: true)

    filterSubjectCountByRace(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: s.PT_RACE_CD_1,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountByDiseaseTerm(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: s.DZ_DX_NM,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountByRegisteringInstitution(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: s.REG_INST_ID_CD,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountByPatientSubgroup(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: s.PT_SUBGRP_ASSIGN_TP,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountByDiseaseStageAtEntry(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL  MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: e.DISEAS_STG,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountByCauseOfDeath(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: srv.DEATH_CAUS_CD,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountBySitesOfDiseaseAtAutopsy(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: srv.ATPSY_DZ_SITE_NM,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountBySourceOfTheLabData(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: l.LAB_DATA_SRCE_NM,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountByLabTest(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: l.LAB_TEST_NM,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountBySystemOrganClass(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: ae.MEDDRA_SOC_TRM_NM,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountBySerious(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: ae.SAE_RSN,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountByOutcome(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: ae.AE_OUTCOME,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountBySomaticPathogenicity(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: sv.SOMATIC_VAR_PTHGNC_CAT,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountByFileType(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: f.FILE_TYPE,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    filterSubjectCountByGermlinePathogenicity(
        race: [String] = [],
        diseaseTerm: [String] = [],
        registeringInstitution: [String] = [],
        patientSubgroup: [String] = [],
        stageAtEntry: [String] = [],
        causeOfDeath: [String] = [],
        sitesOfDiseaseAtAutopsy: [String] = [],
        sourceOfTheLabData: [String] = [],
        labTest: [String] = [],
        systemOrganClass: [String] = [],
        serious: [String] = [],
        outcome: [String] = [],
        somaticPathogenicity: [String] = [],
        germlinePathogenicity: [String] = [],
        fileType: [String] = []
    ): [GroupCount] @cypher(statement: """
        MATCH (s:SUBJECT)
            WHERE (size($race) = 0 OR s.PT_RACE_CD_1 IN $race)
            AND (size($diseaseTerm) = 0 OR s.DZ_DX_NM IN $diseaseTerm)
            AND (size($registeringInstitution) = 0 OR s.REG_INST_ID_CD IN $registeringInstitution)
            AND (size($patientSubgroup) = 0 OR s.PT_SUBGRP_ASSIGN_TP IN $patientSubgroup)
        OPTIONAL MATCH (s)<--(e:ENROLLMENT)
            WHERE (size($stageAtEntry) = 0 OR e.DISEAS_STG IN $stageAtEntry)
        OPTIONAL MATCH (s)<--(srv:SURVIVAL)
            WHERE (size($causeOfDeath) = 0 OR srv.DEATH_CAUS_CD IN $causeOfDeath)
            AND (size($sitesOfDiseaseAtAutopsy) = 0 OR srv.ATPSY_DZ_SITE_NM IN $sitesOfDiseaseAtAutopsy)
        OPTIONAL MATCH (s)<--(l:LABORATORY)
            WHERE (size($sourceOfTheLabData) = 0 OR l.LAB_DATA_SRCE_NM IN $sourceOfTheLabData)
            AND (size($labTest) = 0 OR l.LAB_TEST_NM IN $labTest)
        OPTIONAL MATCH (s)<--(ae:ADVERSE_EVENTS)
            WHERE (size($systemOrganClass) = 0 OR ae.MEDDRA_SOC_TRM_NM IN $systemOrganClass)
            AND (size($serious) = 0 OR ae.SAE_RSN IN $serious)
            AND (size($outcome) = 0 OR ae.AE_OUTCOME IN $outcome)
        OPTIONAL MATCH (s)<--(sv:SOMATIC_VARIANT)
            WHERE (size($somaticPathogenicity) = 0 OR sv.SOMATIC_VAR_PTHGNC_CAT IN $somaticPathogenicity)
        OPTIONAL MATCH (s)<--(gv:GERMLINE_VARIANT)
            WHERE (size($germlinePathogenicity) = 0 OR gv.GRMLN_VAR_PTHGNC_CAT IN $germlinePathogenicity)
        OPTIONAL MATCH (s)<--(f:FILE)
            WHERE (size($fileType) = 0 OR f.FILE_TYPE IN $fileType)
        OPTIONAL MATCH (s)-->(ct:CLINICALTRIAL)
        RETURN {
            group: gv.GRMLN_VAR_PTHGNC_CAT,
            subjects: COUNT(DISTINCT s)
        }
    """, passThrough: true)

    fileOverview(uuids: [String] = [], order_by: String = "file_name"): [FileOverview] @cypher(statement: """
        MATCH (f:FILE)
            WHERE (size($uuids) = 0 OR f.UUID IN $uuids)
        OPTIONAL MATCH (f)-->(s:SUBJECT)-->(ct:CLINICALTRIAL)
        RETURN {
            uuid: f.UUID,
            file_name: f.FILE_NAME,
            file_description: f.FILE_DESCRIPTION,
            file_format: f.FILE_FORMAT,
            file_size: f.FILE_SIZE,
            trial_id: ct.CLINICAL_TRIAL_ID,
            trial_short_name: ct.CLINICAL_TRIAL_SHORT_NAME,
            arm: s.ARM,
            subject_id: s.PT_ID
        }
        ORDER BY CASE $order_by
            WHEN 'uuid' THEN f.UUID
            WHEN 'file_name' THEN f.FILE_NAME
            WHEN 'file_description' THEN f.FILE_DESCRIPTION
            WHEN 'file_format' THEN f.FILE_FORMAT
            WHEN 'file_size' THEN f.FILE_SIZE
            WHEN 'trial_id' THEN ct.CLINICAL_TRIAL_ID
            WHEN 'trial_short_name' THEN ct.CLINICAL_TRIAL_SHORT_NAME
            WHEN 'arm' THEN s.ARM
            WHEN 'subject_id' THEN s.PT_ID
            ELSE f.UUID END
    """, passThrough: true)

    fileOverviewDesc(uuids: [String] = [], order_by: String = "file_name"): [FileOverview] @cypher(statement: """
        MATCH (f:FILE)
            WHERE (size($uuids) = 0 OR f.UUID IN $uuids)
        OPTIONAL MATCH (f)-->(s:SUBJECT)-->(ct:CLINICALTRIAL)
        RETURN {
            uuid: f.UUID,
            file_name: f.FILE_NAME,
            file_description: f.FILE_DESCRIPTION,
            file_format: f.FILE_FORMAT,
            file_size: f.FILE_SIZE,
            trial_id: ct.CLINICAL_TRIAL_ID,
            trial_short_name: ct.CLINICAL_TRIAL_SHORT_NAME,
            arm: s.ARM,
            subject_id: s.PT_ID
        }
        ORDER BY CASE $order_by
            WHEN 'uuid' THEN f.UUID
            WHEN 'file_name' THEN f.FILE_NAME
            WHEN 'file_description' THEN f.FILE_DESCRIPTION
            WHEN 'file_format' THEN f.FILE_FORMAT
            WHEN 'file_size' THEN f.FILE_SIZE
            WHEN 'trial_id' THEN ct.CLINICAL_TRIAL_ID
            WHEN 'trial_short_name' THEN ct.CLINICAL_TRIAL_SHORT_NAME
            WHEN 'arm' THEN s.ARM
            WHEN 'subject_id' THEN s.PT_ID
            ELSE f.UUID END DESC
    """, passThrough: true)

    fileIdsFromFileName(file_name: [String] = [], order_by: String = "uuid"): [FileOverview] @cypher(statement: """
        MATCH (f:FILE)
            WHERE (size($file_name) = 0 OR f.FILE_NAME IN $file_name)
        RETURN {
            uuid: f.UUID,
            file_name: f.FILE_NAME
        }
        ORDER BY CASE $order_by
            WHEN 'file_name' THEN f.FILE_NAME
            WHEN 'uuid' THEN f.UUID
            ELSE f.FILE_NAME END
    """, passThrough: true)

    fileIdsFromFileNameDesc(file_name: [String] = [], order_by: String = "uuid"): [FileOverview] @cypher(statement: """
        MATCH (f:FILE)
            WHERE (size($file_name) = 0 OR f.FILE_NAME IN $file_name)
        RETURN {
            uuid: f.UUID,
            file_name: f.FILE_NAME
        }
        ORDER BY CASE $order_by
            WHEN 'file_name' THEN f.FILE_NAME
            WHEN 'uuid' THEN f.UUID
            ELSE f.FILE_NAME END
    """, passThrough: true)
}